{"version":3,"sources":["common/tool.js","index.js"],"names":["toType","obj","toString","call","match","toLowerCase","isEmpty","str","s","replace","undefined","tool","clone","o","k","i","len","length","push","APP","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","todoList","JSON","parse","localStorage","getItem","completeList","state","todo","todoVal","addDate","upDate","isEdit","curShow","todoHanler","bind","assertThisInitialized","addTodo","editComplete","e","target","value","type","checked","setState","objectSpread","Date","toLocaleString","concat","toConsumableArray","index","data","slice","type2","splice","item","evenList","_this2","setItem","stringify","react_default","a","createElement","list","bordered","dataSource","itemLayout","renderItem","Item","extra","actions","onClick","todoOperation","style","color","className","src_EditText","inShowInput","typography","Text","disabled","input","Search","size","name","placeholder","onChange","onSearch","enterButton","es_radio","Group","buttonStyle","defaultValue","Button","Component","EditText","props","_this3","edit","_this4","TextArea","onPressEnter","inputHandler","onBlur","autosize","wordBreak","Fragment","ReactDOM","render","src_APP","document","getElementById"],"mappings":"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","file":"static/js/main.736f39f4.chunk.js","sourcesContent":["// 自定义判断元素类型JS\nfunction toType(obj) {\n  return {}.toString\n    .call(obj)\n    .match(/\\s([a-zA-Z]+)/)[1]\n    .toLowerCase();\n}\n\n// 参数过滤函数\nfunction filterNull(o) {\n  for (var key in o) {\n    if (o[key] === null) {\n      delete o[key];\n    }\n    if (toType(o[key]) === \"string\") {\n      o[key] = o[key].trim();\n    } else if (toType(o[key]) === \"object\") {\n      o[key] = filterNull(o[key]);\n    } else if (toType(o[key]) === \"array\") {\n      o[key] = filterNull(o[key]);\n    }\n  }\n  return o;\n}\n// 处理时间格式（*天前\nfunction goodTime(str) {\n  if (str.toString().indexOf(\"-\") > 0) {\n    str = str\n      .replace(/T/g, \" \")\n      .replace(/\\.[\\d]{3}Z/, \"\")\n      .replace(/(-)/g, \"/\"); // 将 '-' 替换成 '/'\n    str = str.slice(0, str.indexOf(\".\")); // 删除小数点及后面的数字\n  }\n  var arr = str.split(/[- : /]/);\n  let now = new Date().getTime();\n  let oldTime = new Date(\n    arr[0],\n    arr[1] - 1,\n    arr[2],\n    arr[3],\n    arr[4],\n    arr[5]\n  ).getTime();\n  let difference = now - oldTime;\n  let result = \"\";\n  let minute = 1000 * 60;\n  let hour = minute * 60;\n  let day = hour * 24;\n  let month = day * 30;\n  let year = month * 12;\n  let _year = difference / year;\n  let _month = difference / month;\n  let _week = difference / (7 * day);\n  let _day = difference / day;\n  let _hour = difference / hour;\n  let _min = difference / minute;\n\n  if (_year >= 1) {\n    result = ~~_year + \" 年前\";\n  } else if (_month >= 1) {\n    result = ~~_month + \" 个月前\";\n  } else if (_week >= 1) {\n    result = ~~_week + \" 周前\";\n  } else if (_day >= 1) {\n    result = ~~_day + \" 天前\";\n  } else if (_hour >= 1) {\n    result = ~~_hour + \" 个小时前\";\n  } else if (_min >= 1) {\n    result = ~~_min + \" 分钟前\";\n  } else if (_min < 1) {\n    result = \"刚刚\";\n  } else {\n    result = str;\n  }\n  return result;\n}\n\n// 对象深度拷贝\nfunction clone(obj) {\n  // 深度拷贝\n  var o;\n  switch (toType(obj)) {\n    case \"undefined\":\n      break;\n    case \"string\":\n      o = obj + \"\";\n      break;\n    case \"number\":\n      o = obj - 0;\n      break;\n    case \"boolean\":\n      o = obj;\n      break;\n    case \"null\":\n      o = null;\n      break;\n    case \"object\":\n      o = {};\n      for (let k in obj) {\n        o[k] = clone(obj[k]);\n      }\n      break;\n    case \"array\":\n      o = [];\n      for (let i = 0, len = obj.length; i < len; i++) {\n        o.push(clone(obj[i]));\n      }\n      break;\n    default:\n      o = obj;\n      break;\n  }\n  return o;\n}\n\n/**\n * 时间格式化函数\n * @param {*时间格式:yyyy-MM-dd hh:mm:ss} fmt\n * @param {*时间字符串} date\n */\nfunction dateFtt(fmt, date) {\n  if (!(date instanceof Date)) {\n    if (!isEmpty(date)) {\n      return \"无\";\n    }\n    date = new Date(date);\n  }\n  var o = {\n    \"M+\": date.getMonth() + 1, // 月份\n    \"d+\": date.getDate(), // 日\n    \"h+\": date.getHours(), // 小时\n    \"m+\": date.getMinutes(), // 分\n    \"s+\": date.getSeconds(), // 秒\n    \"q+\": Math.floor((date.getMonth() + 3) / 3), // 季度\n    S: date.getMilliseconds() // 毫秒\n  };\n  if (/(y+)/.test(fmt)) {\n    fmt = fmt.replace(\n      RegExp.$1,\n      (date.getFullYear() + \"\").substr(4 - RegExp.$1.length)\n    );\n  }\n  for (var k in o) {\n    if (new RegExp(\"(\" + k + \")\").test(fmt)) {\n      fmt = fmt.replace(\n        RegExp.$1,\n        RegExp.$1.length === 1 ? o[k] : (\"00\" + o[k]).substr((\"\" + o[k]).length)\n      );\n    }\n  }\n  return fmt;\n}\n/**\n * 验证参数是否为空\n * @param {*要验证的参数} str\n * @return 为空返回true\n */\nfunction isEmpty(str) {\n  let s = str;\n  if (typeof str === \"string\") {\n    s = str.replace(/(^\\s*)|(\\s*$)/g, \"\");\n  } // 去除空格;\n  if (s === undefined || s === null || s === \"\") {\n    return true;\n  }\n}\n\nexport default {\n  toType: function(obj) {\n    return toType(obj);\n  },\n  filterNull: function(o) {\n    return filterNull(o);\n  },\n  goodTime: function(str) {\n    return goodTime(str);\n  },\n  clone: function(obj) {\n    return clone(obj);\n  },\n  dateFtt: function(fmt, date) {\n    return dateFtt(fmt, date);\n  },\n  isEmpty: function(str) {\n    return isEmpty(str);\n  }\n};\n","import React, { Component } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Input, Radio, List, Typography } from \"antd\";\nimport tool from \"./common/tool\";\nimport \"./common/tool.css\";\nimport \"./index.css\";\n\nclass APP extends Component {\n  constructor() {\n    super();\n    const todoList = JSON.parse(localStorage.getItem(\"todoList\")) || [];\n    const completeList = JSON.parse(localStorage.getItem(\"completeList\")) || [];\n    this.state = {\n      todoList: todoList, //待办列表\n      completeList: completeList, //已完成列表\n      todo: {\n        //当前新加待办\n        todoVal: \"\",\n        addDate: \"\",\n        upDate: \"\",\n        isEdit: false\n      },\n      curShow: 1 //true显示待办列表，false显示完成列表\n    };\n    this.todoHanler = this.todoHanler.bind(this);\n    this.addTodo = this.addTodo.bind(this);\n    this.editComplete = this.editComplete.bind(this);\n  }\n  // todo 输入框的值得绑定\n  todoHanler(e) {\n    const target = e.target;\n    const value = target.type === \"checkbox\" ? target.checked : target.value;\n    this.setState({\n      todo: {\n        ...this.state.todo,\n        todoVal: value\n      }\n    });\n  }\n  // 添加todo\n  addTodo() {\n    if (tool.isEmpty(this.state.todo.todoVal)) {\n      return;\n    }\n    this.setState(state => {\n      let todo = { ...state.todo };\n      todo.addDate = new Date().toLocaleString();\n      return {\n        todoList: [...state.todoList, todo],\n        todo: {\n          todoVal: \"\",\n          addDate: \"\",\n          upDate: \"\",\n          isEdit: false\n        },\n        curShow:1\n      };\n    });\n  }\n  // 编辑todo完成\n  editComplete(index, e) {\n    const value = e.target.value;\n    let data = this.state.todoList.slice();\n    data[index].todoVal = value;\n    data[index].isEdit = false;\n    this.setState({\n      todoList: data\n    });\n  }\n  // todo列表的操作按钮回调函数\n  todoOperation(type, i, type2) {\n    let todoList = this.state.todoList.slice();\n    if (type === \"edit\") {\n      todoList[i].isEdit = true;\n    } else if (type === \"delete\") {\n      if (type2 === \"completeList\") {\n        let  completeList = this.state.completeList.slice()\n        completeList.splice(i, 1)\n        this.setState({\n          completeList:  completeList\n        });\n      } else {\n        todoList.splice(i, 1);\n      }\n    } else if (type === \"complete\") {\n      let item = todoList.splice(i, 1);\n      this.setState({\n        completeList: [...this.state.completeList, ...item]\n      });\n    }\n    this.setState({\n      todoList: todoList\n    });\n  }\n  render() {\n    const state = tool.clone(this.state);\n    localStorage.setItem(\"todoList\", JSON.stringify(state.todoList));\n    localStorage.setItem(\"completeList\", JSON.stringify(state.completeList));\n\n    let evenList;\n    if (this.state.curShow) {\n      evenList = (\n        <List\n          bordered\n          dataSource={this.state.todoList}\n          itemLayout=\"vertical\"\n          renderItem={(item, i) => (\n            <List.Item\n            extra={item.addDate}\n              actions={[\n                <span\n                  onClick={() => this.todoOperation(\"edit\", i)}\n                  style={{ color: \"#1890ff\" }}\n                >\n                  编辑\n                </span>,\n                <span\n                  onClick={() => this.todoOperation(\"delete\", i)}\n                  style={{ color: \"#1890ff\" }}\n                >\n                  删除\n                </span>,\n                <span\n                  onClick={() => this.todoOperation(\"complete\", i)}\n                  style={{ color: \"#1890ff\" }}\n                >\n                  完成\n                </span>\n              ]}\n              \n            >\n              <div className=\"list-item-wrapper\">\n                <EditText\n                  index={i}\n                  value={item.todoVal}\n                  inShowInput={item.isEdit}\n                  editComplete={this.editComplete}\n                />\n              </div>\n              {/* <div className=\"m-l-5\">{item.addDate}</div>            */}\n            </List.Item>\n          )}\n        />\n      );\n    } else {\n      evenList = (\n        <List\n          bordered\n          dataSource={this.state.completeList}\n          itemLayout=\"horizontal\"\n          renderItem={(item, i) => (\n            <List.Item\n              actions={[\n                <span\n                  onClick={() =>\n                    this.todoOperation(\"delete\", i, \"completeList\")\n                  }\n                  style={{ color: \"#1890ff\" }}\n                >\n                  删除\n                </span>\n              ]}\n            >\n              <div className=\"list-item-wrapper\">\n                <Typography.Text disabled>{item.todoVal}</Typography.Text>\n              </div>\n              <div className=\"m-l-5\">{item.addDate}</div>\n            </List.Item>\n          )}\n        />\n      );\n    }\n    return (\n      <div className=\"todo-wrapper\">\n        <Input.Search\n          size=\"large\"\n          name=\"todo.todoVal\"\n          placeholder=\"请输入待办事项\"\n          value={this.state.todo.todoVal}\n          onChange={this.todoHanler}\n          onSearch={this.addTodo}\n          enterButton=\"Enter\"\n        />\n        <div className=\"event-list m-t-15\">\n          <Radio.Group\n            value={this.state.curShow}\n            onChange={e => this.setState({ curShow: e.target.value })}\n            buttonStyle=\"solid\"\n            defaultValue=\"todoList\"\n          >\n            <Radio.Button value={1}>待办列表</Radio.Button>\n            <Radio.Button value={0}>已完成列表</Radio.Button>\n          </Radio.Group>\n          <div className=\"todo-list-wrapper m-t-15\">{evenList}</div>\n        </div>\n      </div>\n    );\n  }\n}\n// 可以切换查看和编辑text的组件\nclass EditText extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      todoVal: null\n    };\n  }\n  componentDidMount() {\n    this.setState({\n      todoVal: this.props.value\n    });\n  }\n  inputHandler(e) {\n    this.setState({\n      todoVal: e.target.value\n    });\n  }\n  render() {\n    let edit;\n    if (!this.props.inShowInput) {\n      edit = <span style={{ wordBreak: \"break-all\" }}>{this.props.value}</span>;\n    } else {\n      edit = (\n        <Input.TextArea\n          onPressEnter={e => this.props.editComplete(this.props.index, e)}\n          onChange={e => this.inputHandler(e)}\n          onBlur={e => this.props.editComplete(this.props.index, e)}\n          value={this.state.todoVal}\n          size=\"small\"\n          autosize\n        />\n      );\n    }\n    return <>{edit}</>;\n  }\n}\n\nReactDOM.render(<APP />, document.getElementById(\"root\"));\n"],"sourceRoot":""}